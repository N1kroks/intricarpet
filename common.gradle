apply plugin: 'maven-publish'
apply plugin: 'fabric-loom'
apply plugin: 'com.replaymod.preprocess'

int mcVersion = 1

preprocess {
  mcVersion = vars.get()["MC"]
  tabIndentation = false
}

repositories {
  maven {
    url 'https://masa.dy.fi/maven'
  }
  maven {
    url 'https://jitpack.io'
  }
  maven {
    url 'https://www.cursemaven.com'
  }
}

dependencies {
  // loom
  minecraft "com.mojang:minecraft:${project.minecraft_version}"
  mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
  modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
  // mods
  modImplementation "carpet:fabric-carpet:${project.carpet_core_version}"
}

loom {
  runConfigs.all {
    runDir '../../run'
    vmArgs '-Dmixin.debug.export=true'
    ideConfigGenerated true
  }
}

remapJar {
  remapperIsolation = true
}

if (mcVersion >= 11800) {
  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17
}
else if (mcVersion >= 11700) {
  sourceCompatibility = JavaVersion.VERSION_16
  targetCompatibility = JavaVersion.VERSION_16
}
else {
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8
}

String versionSuffix = ''
if (System.getenv("BUILD_RELEASE") != "true") {
  String buildNumber = System.getenv("BUILD_ID")
  versionSuffix += buildNumber != null ? ('+build.' + buildNumber) : '-SHAPSHOT'
}
String fullModVersion = project.mod_version + versionSuffix

version = 'v' + fullModVersion
group = project.parent.maven_group
archivesBaseName = project.parent.archives_base_name + '-mc' + project.minecraft_version

processResources {
  inputs.property "version", fullModVersion

  filesMatching("fabric.mod.json") {
    def valueMap = [
      "version": fullModVersion,
      "carpet_dependency": project.carpet_dependency,
      "minecraft_dependency": project.minecraft_dependency,
    ]
    expand valueMap
  }
}

tasks.withType(JavaCompile) {
  options.encoding = "UTF-8"
  options.compilerArgs << "-Xlint:deprecation" << "-Xlint:removal" << "-Xlint:unchecked"
  options.warnings = false
}

java {
  // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
  // if it is present.
  // If you remove this line, sources will not be generated.
  withSourcesJar()
}

jar {
  from("../../LICENSE") {
    rename {it}
  }
}

// configure the maven publication
publishing {
  publications {
    mavenJava(MavenPublication) {
      artifactId archivesBaseName
      from components.java
    }
  }
  // select the repositories you want to publish to
  repositories {
  // uncomment to publish to the local maven
  // mavenLocal()
  }
}
